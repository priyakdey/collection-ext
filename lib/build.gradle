/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
}

group = "com.priyakdey"
archivesBaseName = "collection-ext"
version = "0.0.1-alpha"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

repositories {
    mavenCentral()
}

var junit5Version = project.properties['junit5.version']
var graphvizJavaVersion = project.properties['graphviz-java.version']

dependencies {
    compileOnly "guru.nidi:graphviz-java:$graphvizJavaVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5Version"
    testRuntimeOnly "guru.nidi:graphviz-java:$graphvizJavaVersion"
}

tasks.named('test') {
    useJUnitPlatform()

    // TODO (priyakdey): Need to find junit5 integration with gradle or create custom listener
//    def tableHeader = "+----------------------------------+---------+"
//    def tableFormat = "| %-32s | %-7s |\n"
//
//    doFirst {
//        println tableHeader
//        printf(tableFormat, "Test Name", "Result")
//        println tableHeader
//    }
//
//    afterTest { desc, result ->
//        String color;
//        switch (result.resultType) {
//            case TestResult.ResultType.SUCCESS:
//                color = "\u001B[32m"; // Green
//                break;
//            case TestResult.ResultType.FAILURE:
//                color = "\u001B[31m"; // Red
//                break;
//            default:
//                color = "\u001B[0m";  // Reset
//        }
//        printf(tableFormat, "${desc.className} - ${desc.name}", "${color}${result.resultType}\u001B[0m")
//    }
//
//    doLast {
//        println tableHeader
//    }

    afterTest { desc, result ->
        printf("%-80s - %-7s\n", "${desc.className} - ${desc.name}", "${result.resultType}")
    }

}
